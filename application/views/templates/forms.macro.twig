<!-- Forms Macros -->
<!-- Form macros are Twig helper functions that expand into HTML input tags, providing consistent form inputs across the application-->

<!-- Macro: Input
	Create an HTML input Element
	values:
		name 		 - The corresponding database field name identifier
		title 		 - the display title for the field
		type			 - type of html input. Default is text
		value 		 - The current value to display in the field
		size			 - The width of the input
		maxLength 	 - The maximum number of characters allowed
		isRequired 	 - Whether this field is required or not
		help 		 - Help text to display to and guide the user
	 -->
{% macro input(values) %} <!-- title, id, name, value, size, isRequired, maxLength, type -->
	<label for='{{ values['name'] }}'>
		<p class='{% if values['isRequired'] %}required{% endif %} title'>{{ values['title']|raw }} {% if values['isRequired'] %}*{% endif %}</p>
 	   	<input type="{{ values['type']|default('text') }}" id='{{ values['name']}}' name="{{ values['name'] }}" value="{{ values['value']|e }}" size="{{ values['size']|default(30) }}" maxlength="{{ values['maxLength']|default(values['size'])|default(30) }}" onblur='saveValue(event);'/>
		{% if values['help'] %}
			<p class="help">{{ values['help'] }}</p>
		{% endif %}

 	</label>

{% endmacro %}

<!-- Macro: Select
	Create a Select Field Element
	values:
		name 		 - The corresponding database field name identifier
		title 		 - the display title for the field
		value 		 - The current value to display in the field
		options 		 - Associative array of values and names (value=>name)
		isRequired 	 - Whether this field is required or not
	 -->
{% macro select(values) %}
	<label for='{{ values['name'] }}'>
		<p class='{% if values['isRequired'] %}required{% endif %} title'>{{ values['title']|raw }} {% if values['isRequired'] %}*{% endif %}</p>
		<select id='{{ values['name'] }}' name="{{ values['name'] }}" value="currentValue" onchange="saveValue(event);">
			{% for value,name in values['options'] %}
				<option value="{{value}}">{{name}}</option>
			{% endfor %}
		</select>
		<script type="text/javascript">initValue('{{ values['name'] }}','{{ values['value'] }}')</script>
 	</label>

{% endmacro %}


<!-- Macro: Textarea
	Create a textarea Field Element
	values:
		name 		 - The corresponding database field name identifier
		title 		 - the display title for the field
		value 		 - The current value to display in the field
		cols			 - The number of display columns
		rows			 - The number of display rows
	 -->
{% macro textarea(values) %}
	<label for="{{values['name']}}">
		<p class="title">{{values['title']|raw}}</p>
		<textarea cols="{{values['cols']}}" rows="{{values['rows']}}" id="{{values['name']}}" name="{{values['name']}}" value="" onblur="saveValue(event);">{{values['value']}}</textarea>
	</label>

{% endmacro %}


<!-- Macro: Boolean
	Create a Boolean Field Element
	values:
		name 		 - The corresponding database field name identifier
		title 		 - the display title for the field
		value 		 - The current value to display in the field
		showOnTrue	 - Determines whether to show corresponding section on true or false. default is true	
		isRequired 	 - Whether this field is required or not
		yesText 		 - specifies yes option text (optional)
		noText 		 - specifies no option text (optional)

	 -->
{% macro boolean(values, boolean_display) %}
	<label for="{{values['name']}}">
		<p class="{% if values['isRequired'] %}required{% endif %} title">{{values['title']|raw}} {% if values['isRequired'] %}*{% endif %}</p>
		<label for="{{values['name']}}_yes"><input type="radio" id="{{values['name']}}_yes" name="{{values['name']}}" value="1"
		{% if boolean_display  == 'yes' %}
		 	onclick="showOrNot(this.name+'_section', {% if (values['showOnTrue'] is not defined) or values['showOnTrue'] %}true{% else %}false{% endif %})" 
		 {% endif %}
		 onchange="saveValue(event);" >{% if values['yesText'] %} {{values['yesText']}}{% else %} Yes{% endif %}</label>
		<label for="{{values['name']}}_no"><input type="radio" id="{{values['name']}}_no" name="{{values['name']}}" value="0" 
			{% if boolean_display == 'yes' %}
			onclick="showOrNot(this.name+'_section', {% if (values['showOnTrue'] is not defined) or values['showOnTrue'] %}false{% else %}true{% endif %})" 
			{% endif %}
			onchange="saveValue(event);" checked>{% if values['noText'] %} {{values['noText']}}{% else %} No{% endif %}</label>
	</label>
	<script type="text/javascript">checkInitValue('{{values['name']}}_yes',"{{values['value']}}");</script>
	<script type="text/javascript">checkInitValue('{{values['name']}}_no',"{{values['value']}}");</script>

{% endmacro %}

<!-- Macro: Boolean Display
	Create a Boolean Field Element that toggles the display of a corresponding section
	values:
		title 		 - The display title for the field
		name 		 - The corresponding database field name identifier
		value 		 - The current value to display in the field
		showOnTrue	 - Determines whether to show corresponding section on true or false. default is true
		yesText 		 - specifies yes option text (optional)
		noText 		 - specifies no option text (optional)

	 -->
{% macro booleanDisplay(values) %}
	{{ _self.boolean(values, 'yes') }}
	<script type="text/javascript">
		$().ready(function() {
			showOrNot('{{values['name']}}_section', {% if (values['showOnTrue'] is not defined) or values['showOnTrue']  %} {{values['value']}} {% else %} !{{values['value']}} {% endif %} );
		});
	</script>
{% endmacro %}


<!-- Macro: Checkbox
	Create a Checkbox Field Element
	values:
		title 		 - The display title for the field
		name 		 - The corresponding database field name identifier
		value 		 - The current value (0 or 1) to indicate checked or not checked
	 -->
{% macro checkbox(values) %}
		<label for="{{ values['name'] }}" class="one_line"><input type="checkbox" id="{{ values['name'] }}" name="{{ values['name'] }}" value="1" onchange="saveValue(event);"/>{{ values['title'] }}</label>
	<script type="text/javascript"> 
		checkInitValue('{{ values['name'] }}',"{{ values['value'] }}");
	</script>

{% endmacro %}


